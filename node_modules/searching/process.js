var fs = require('fs');
var byline = require('byline');

var counter = 0
var mainCounter = 0
var strFirst = ''
var strSecond = ''
var strThird = ''
var strFourth = ''
var strFifth = ''
var strSixth = ''
var currentStr
var willReturn = []
var limit
var phrase
var regexRule
process.on('message', function (params) {
    phrase = params[0]
    limit = params[1]
    filePath = params[2]
    var stream = fs.createReadStream(filePath);
    stream = byline.createStream(stream);
    regexRule = '[\\.\\?\\!]{1}(\\s|\\n){1,}?[^\\.\\?\\!]+('+phrase+')[^\\.\\?\\!]*.'
    stream.on('data', function (line) {

        if (counter > 4) {
            strFirst = line.toString() + '\n'
            currentStr = strSixth + strFifth + strFourth + strThird + strSecond + strFirst
            var regexRuleFinal = new RegExp(regexRule, 'g', 'm')
            var result = regexRuleFinal.exec(currentStr);
            if (result !== null) {
                var justStr = result[0].slice( 1 ).trim();
                var flag = justStr.indexOf('.')>-1||justStr.indexOf('?')>-1||justStr.indexOf('!')>-1
                if(flag&&willReturn.indexOf(justStr)==-1){
                    willReturn.push(justStr)
                    mainCounter++
                }
            }
            if (mainCounter > limit-1) {
                process.send(willReturn)
            }
            strSixth = strFifth
            strFifth = strFourth
            strFourth = strThird
            strThird = strSecond
            strSecond = strFirst
            currentStr = ''
            counter++
        }
        if (counter == 4) {
            strSecond = line.toString() + ' '
            counter++
        }
        if (counter == 3) {
            strThird = line.toString() + ' '
            counter++
        }
        if (counter == 2) {
            strFourth = line.toString() + ' '
            counter++
        }
        if (counter == 1) {
            strFifth = line.toString() + ' '
            counter++
        }
        if (counter == 0) {
            strSixth = line.toString() + ' '
            counter++
        }
    });
    stream.on('end', function () {
        setTimeout(function () {
            process.send(willReturn)
        }, 300)
    })
});
